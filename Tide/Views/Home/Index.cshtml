@{
    ViewData["Title"] = "Home Page";
}

<div >

    <h2>Users</h2>

    @(Html.Kendo().Grid<Tide.ViewModels.UserViewModel>()
        .Name("Users")
        .Columns(columns =>
        {
            columns.Bound(p => p.Id);
            columns.Bound(p => p.FirstName);
            columns.Bound(p => p.LastName);
            columns.Bound(p => p.Email);
            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(250);
        })
        .ToolBar(tools =>
        {
            tools.Create();
        })
        .Sortable()
        .Pageable()
        .Filterable()
        .AutoBind(false)
        .DataSource(dataSource =>
          dataSource
            .Ajax()
            .Model(model =>
                {
                    model.Id(user => user.Id);
                    model.Field(user => user.Id).Editable(false);
                })
            .Events(events => events.Error("error_handler"))
            .Read(read => read.Action("Users", "User"))
            .Create(create => create.Action("Add", "User"))
            .Update(update => update.Action("Update", "User"))
            .Destroy(destroy => destroy.Action("Delete", "User"))
        )
    )
</div>

<script>

    $(function () {
        var grid = $("#Users").data("kendoGrid");
        console.log(grid);
        grid.dataSource.transport.options.read.beforeSend = addJWT;
        grid.dataSource.transport.options.update.beforeSend = addJWT;
        grid.dataSource.transport.options.create.beforeSend = addJWT;
        grid.dataSource.transport.options.destroy.beforeSend = addJWT;
        grid.dataSource.read();
    });

    function error_handler(e) {
        var errors = $.parseJSON(e.xhr.responseText);

        if (errors) {
            alert("Errors:\n" + errors.join("\n"));
        }
    }

    function addJWT(req) {
        if (!loggedIn() && getToken(refreshTokenName)) {
            refresh(window.location.host)
                .then(res => {
                req.setRequestHeader('Authorization', "Bearer " + res.accessToken)
                Promise.resolve(res);
                });
        }
        else {
            console.log("else")
            req.setRequestHeader('Authorization', "Bearer " + localStorage.getItem("acces_token"));
        }
    };
</script>
