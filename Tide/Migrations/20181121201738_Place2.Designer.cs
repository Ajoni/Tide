// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tide.Data;

namespace Tide.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181121201738_Place2")]
    partial class Place2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Tide.Models.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("Tide.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<int?>("FavPlaceId");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.Property<string>("RefreshToken");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("FavPlaceId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Tide.Models.User", b =>
                {
                    b.HasOne("Tide.Models.Place", "FavPlace")
                        .WithMany()
                        .HasForeignKey("FavPlaceId");
                });
#pragma warning restore 612, 618
        }
    }
}
